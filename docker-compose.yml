version: "3.1"

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - 4999:5000
    working_dir: /app
    volumes:
      - ./backend:/app
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      HOST: db
      PASSWORD: ${PASSWORD}
      DB_PORT: ${DB_PORT}

  db-fill-or-update-tables:
    build:
      context: ./database
      dockerfile: Dockerfile_fill_or_update_tables
    volumes:
      - ./backend/challenges:/app/challenges
      - ./database/fill_or_update_tables.py:/app/fill_or_update_tables.py
      - ./database/sql:/app/sql
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      HOST: db
      PASSWORD: ${PASSWORD}
      DB_PORT: ${DB_PORT}


  db:
    image: postgres
    restart: always
    build:
      context: .
    environment:
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./backend/challenges:/challenges
      - ./database/sql_scripts:/sql_scripts
      - dataframetrainer_postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

volumes:
  dataframetrainer_postgres: