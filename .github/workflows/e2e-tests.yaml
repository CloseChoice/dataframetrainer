name: e2e-tests

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_call:
  workflow_dispatch:

jobs:
  run-e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      PORT: ${{ secrets.PORT }}
      PASSWORD: ${{ secrets.PASSWORD }}
      HOST: ${{ secrets.HOST }}
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Setup docker compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2' # the full version of `docker-compose` command
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        working-directory: ./frontend-svelte
        run: npm ci
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      -
        name: Run docker compose
        working-directory: .
        run: |
          ls -la
          docker compose -f docker-compose.yml up -d
      -
        name: Check curl response of backend
        run: |
          # wait till the fill-db-with-test-input finished writing to db
          sleep 30
          docker container ls
          response_code=$(curl -o /dev/null -w "%{http_code}" http://127.0.0.1:5000/get_all_challenges/)
          if [ "$response_code" -ne 200 ]; then
            echo "Response code is not 200. Failing the pipeline."
            exit 1
          fi
      - name: Start frontend
        working-directory: ./frontend-svelte
        run: npm run dev &
      - name: Wait for server to start
        run: sleep 10
      - name: Run Cypress tests Chrome
        working-directory: ./frontend-svelte
        run: npx cypress run --browser chrome
      - name: Run Cypress tests Firefox
        working-directory: ./frontend-svelte
        run: npx cypress run --browser firefox
      -
        name: Run docker compose dev
        working-directory: .
        run: |
          ls -la
          docker compose -f docker-compose.dev.yml up -d
      -
        name: Check curl response of backend
        run: |
          echo "start testing elo endpoints"
          response_code=$(curl -X POST http://127.0.0.1:5000/get_next_challenge -H "Content-Type: application/json" -d '{"user_id": "d037ce8d-0381-471f-bfa5-98467685a335"}')
          next_challenge=$(echo "$response_code" | grep "next_challenge")
          # check if GroupTerms is in the next_challenge string
          if [[ "$next_challenge" != *"GroupTerms"* ]]; then
            echo "Expected next_challenge to be GroupTerms. Received $next_challenge instead."
            echo $response_code
            exit 1
          fi